// automatically generated by the FlatBuffers compiler, do not modify

package Editor;

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Fixture extends Table {
  public static Fixture getRootAsFixture(ByteBuffer _bb) { return getRootAsFixture(_bb, new Fixture()); }
  public static Fixture getRootAsFixture(ByteBuffer _bb, Fixture obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Fixture __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String name() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public byte type() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public float density() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float friction() { int o = __offset(10); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float restitution() { int o = __offset(12); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public Vec2f points(int j) { return points(new Vec2f(), j); }
  public Vec2f points(Vec2f obj, int j) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o) + j * 8, bb) : null; }
  public int pointsLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }

  public static int createFixture(FlatBufferBuilder builder,
      int nameOffset,
      byte type,
      float density,
      float friction,
      float restitution,
      int pointsOffset) {
    builder.startObject(6);
    Fixture.addPoints(builder, pointsOffset);
    Fixture.addRestitution(builder, restitution);
    Fixture.addFriction(builder, friction);
    Fixture.addDensity(builder, density);
    Fixture.addName(builder, nameOffset);
    Fixture.addType(builder, type);
    return Fixture.endFixture(builder);
  }

  public static void startFixture(FlatBufferBuilder builder) { builder.startObject(6); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(0, nameOffset, 0); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(1, type, 0); }
  public static void addDensity(FlatBufferBuilder builder, float density) { builder.addFloat(2, density, 0.0f); }
  public static void addFriction(FlatBufferBuilder builder, float friction) { builder.addFloat(3, friction, 0.0f); }
  public static void addRestitution(FlatBufferBuilder builder, float restitution) { builder.addFloat(4, restitution, 0.0f); }
  public static void addPoints(FlatBufferBuilder builder, int pointsOffset) { builder.addOffset(5, pointsOffset, 0); }
  public static void startPointsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(8, numElems, 4); }
  public static int endFixture(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

